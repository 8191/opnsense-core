# AICCU Configuration

{% if helpers.exists('SixXS.aiccu.general') and SixXS.aiccu.general.enabled|default("0") == "1" %}
# Login information (defaults: none)
username {{ SixXS.aiccu.general.username }}
password {{ SixXS.aiccu.general.password }}

# Protocol and server to use for setting up the tunnel (defaults: none)
protocol {{ SixXS.aiccu.general.protocol|default("TIC") }}
server {{ SixXS.aiccu.general.server|default("tic.sixxs.net") }}

# Interface names to use (default: aiccu)
# ipv6_interface is the name of the interface that will be used as a tunnel interface.
# On *BSD the ipv6_interface should be set to gifX (eg gif0) for proto-41 tunnels
# or tunX (eg tun0) for AYIYA tunnels.
#ipv6_interface gif8

# The tunnel_id to use (default: none)
# (only required when there are multiple tunnels in the list)
{% if SixXS.aiccu.general.tunnelId|default("") != "" %}
tunnel_id {{ SixXS.aiccu.general.tunnelId }}
{% endif %}

# Daemonize? (default: true)
# Set to false if you want to see any output
# When true output goes to syslog
#
# WARNING: never run AICCU from DaemonTools or a similar automated
# 'restart' tool/script. When AICCU does not start, it has a reason
# not to start which it gives on either the stdout or in the (sys)log
# file. The TIC server *will* automatically disable accounts which
# are detected to run in this mode.
#
daemonize true

# Automatic Login and Tunnel activation?
automatic true

# Require TLS?
# When set to true, if TLS is not supported on the server
# the TIC transaction will fail.
# When set to false, it will try a starttls, when that is
# not supported it will continue.
# In any case if AICCU is build with TLS support it will
# try to do a 'starttls' to the TIC server to see if that
# is supported.
requiretls false

# PID File
pidfile /var/run/aiccu.pid

# Add a default route (default: true)
{% if SixXS.aiccu.general.defaultRoute|default("1") == "1" %}
defaultroute true
{% else %}
defaultroute false
{% endif %}

# Behind NAT (default: false)
# Notify the user that a NAT-kind network is detected
{% if SixXS.aiccu.general.behindNat|default("0") == "1" %}
behindnat true
{% else %}
behindnat false
{% endif %}

# Additional user configuration
{{ SixXS.aiccu.general.customConfig|default("# (no user configuration)") }}
{% else %}
# Service disabled
{% endif %}
